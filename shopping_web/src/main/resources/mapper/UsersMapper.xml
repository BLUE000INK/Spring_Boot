<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.UsersMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.Users">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_pwd" jdbcType="VARCHAR" property="userPwd" />
    <result column="user_phone" jdbcType="VARCHAR" property="userPhone" />
    <result column="user_email" jdbcType="VARCHAR" property="userEmail" />
    <result column="user_city" jdbcType="VARCHAR" property="userCity" />
    <result column="user_gender" jdbcType="INTEGER" property="userGender" />
    <result column="user_bank" jdbcType="VARCHAR" property="userBank" />
    <result column="user_admin" jdbcType="INTEGER" property="userAdmin" />
    <result column="user_money" jdbcType="INTEGER" property="userMoney" />
    <result column="user_score" jdbcType="INTEGER" property="userScore" />
    <result column="user_credit" jdbcType="INTEGER" property="userCredit" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, user_name, user_pwd, user_phone, user_email, user_city, user_gender, user_bank,
    user_admin, user_money, user_score, user_credit
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from table_users
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from table_users
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.Users">
    insert into table_users (user_id, user_name, user_pwd,
      user_phone, user_email, user_city,
      user_gender, user_bank, user_admin,
      user_money, user_score, user_credit
      )
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userPwd,jdbcType=VARCHAR},
      #{userPhone,jdbcType=VARCHAR}, #{userEmail,jdbcType=VARCHAR}, #{userCity,jdbcType=VARCHAR},
      #{userGender,jdbcType=INTEGER}, #{userBank,jdbcType=VARCHAR}, #{userAdmin,jdbcType=INTEGER},
      #{userMoney,jdbcType=INTEGER}, #{userScore,jdbcType=INTEGER}, #{userCredit,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.Users">
    insert into table_users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userPwd != null">
        user_pwd,
      </if>
      <if test="userPhone != null">
        user_phone,
      </if>
      <if test="userEmail != null">
        user_email,
      </if>
      <if test="userCity != null">
        user_city,
      </if>
      <if test="userGender != null">
        user_gender,
      </if>
      <if test="userBank != null">
        user_bank,
      </if>
      <if test="userAdmin != null">
        user_admin,
      </if>
      <if test="userMoney != null">
        user_money,
      </if>
      <if test="userScore != null">
        user_score,
      </if>
      <if test="userCredit != null">
        user_credit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null">
        #{userPwd,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null">
        #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userCity != null">
        #{userCity,jdbcType=VARCHAR},
      </if>
      <if test="userGender != null">
        #{userGender,jdbcType=INTEGER},
      </if>
      <if test="userBank != null">
        #{userBank,jdbcType=VARCHAR},
      </if>
      <if test="userAdmin != null">
        #{userAdmin,jdbcType=INTEGER},
      </if>
      <if test="userMoney != null">
        #{userMoney,jdbcType=INTEGER},
      </if>
      <if test="userScore != null">
        #{userScore,jdbcType=INTEGER},
      </if>
      <if test="userCredit != null">
        #{userCredit,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Users">
    update table_users
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null">
        user_pwd = #{userPwd,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null">
        user_phone = #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userCity != null">
        user_city = #{userCity,jdbcType=VARCHAR},
      </if>
      <if test="userGender != null">
        user_gender = #{userGender,jdbcType=INTEGER},
      </if>
      <if test="userBank != null">
        user_bank = #{userBank,jdbcType=VARCHAR},
      </if>
      <if test="userAdmin != null">
        user_admin = #{userAdmin,jdbcType=INTEGER},
      </if>
      <if test="userMoney != null">
        user_money = #{userMoney,jdbcType=INTEGER},
      </if>
      <if test="userScore != null">
        user_score = #{userScore,jdbcType=INTEGER},
      </if>
      <if test="userCredit != null">
        user_credit = #{userCredit,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Users">
    update table_users
    set user_name = #{userName,jdbcType=VARCHAR},
      user_pwd = #{userPwd,jdbcType=VARCHAR},
      user_phone = #{userPhone,jdbcType=VARCHAR},
      user_email = #{userEmail,jdbcType=VARCHAR},
      user_city = #{userCity,jdbcType=VARCHAR},
      user_gender = #{userGender,jdbcType=INTEGER},
      user_bank = #{userBank,jdbcType=VARCHAR},
      user_admin = #{userAdmin,jdbcType=INTEGER},
      user_money = #{userMoney,jdbcType=INTEGER},
      user_score = #{userScore,jdbcType=INTEGER},
      user_credit = #{userCredit,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>

  <select id="selectByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from table_users
    where user_name = #{userName,jdbcType=VARCHAR}
  </select>
  <select id="userCount" resultType="java.lang.Integer">
    select
    count( * )
    from table_users
  </select>
  <select id="selectidMAX" resultType="java.lang.Integer">
    select MAX(user_id) from table_users
  </select>
  <update id="myupdate" parameterType="com.example.demo.entity.Users" >
    update table_users
    set
        user_money = #{userMoney,jdbcType=INTEGER},
        user_score = #{userScore,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <select id="getAllUser" resultMap="BaseResultMap">
    select
      *
    from table_users
  </select>
  <update id="UserCredit21" parameterType="com.example.demo.entity.Users">
    update table_users
    set
        user_credit = #{userCredit,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="UserCredit22" parameterType="com.example.demo.entity.Users">
    update table_users
    set
      user_credit = #{userCredit,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>
